image:
  registry: docker.io
  repository: traefik
  tag: v3
  pullPolicy: IfNotPresent

logs:
  general:
    level: DEBUG
  access:
    enabled: true
    filePath: /var/log/traefik/access.log

api:
  insecure: false
  dashboard: false

entryPoints:
  web:
    port: 8000
    expose:
      default: true
    exposedPort: 80
    protocol: TCP
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
          permanent: true

  websecure:
    port: 8443
    expose:
      default: true
    exposedPort: 443
    http:
      encodeQuerySemicolons: true
    forwardedHeaders:
      trustedIPs: 173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22,2400:cb00::/32,2606:4700::/32,2803:f800::/32,2405:b500::/32,2405:8100::/32,2a06:98c0::/29,2c0f:f248::/32
    protocol: TCP

  traefik:
    port: 9000
    hostPort:
    hostIP:
    expose:
      default: false
    exposedPort: 9000
    protocol: TCP

certificatesresolvers:
  cloudflare:
    acme:
      dnschallenge:
        provider: cloudflare
      storage: /letsencrypt/acme.json

env:
  - name: CF_API_EMAIL
    value: "${CLOUDFLARE_API_EMAIL}"
  - name: CF_API_KEY
    value: "${CLOUDFLARE_API_KEY}"

volumes:
  - name: docker-sock
    mountPath: /var/run/docker.sock

  - name: letsencrypt
    mountPath: /letsencrypt

  - name: traefik-logs
    mountPath: /var/log/traefik

ingressRoute:
  dashboard:
    enabled: false
    annotations: {}
    labels: {}
    matchRule: PathPrefix(`/dashboard`) || PathPrefix(`/api`)
    services:
      - name: api@internal
        kind: TraefikService
    entryPoints: ["traefik"]
    middlewares: []
    tls: {}
  healthcheck:
    enabled: false
    annotations: {}
    labels: {}
    matchRule: PathPrefix(`/ping`)
    services:
      - name: ping@internal
        kind: TraefikService
    entryPoints: ["traefik"]
    middlewares: []
    tls: {}

updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1


middlewares:
  traefik-dashboard-auth:
    basicAuth:
      users:
        - "aaa:$$2y$$05$$mdhjWHLFZhLhtpPAwJO42uzHhfFIkVWNnXXq1czH6B71ikytjYRDC" #aaa:aaa
      removeHeader: true
